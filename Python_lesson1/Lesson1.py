# За день машина проезжает n километров. Сколько
# дней нужно, чтобы проехать маршрут длиной m
# километров? При решении этой задачи нельзя
# пользоваться условной инструкцией if и циклами.
# import math

# n = int(input("input days: "))
# m = int(input("input kilkometers: "))

# print(math.ceil(m/n))

# В некоторой школе решили набрать три новых
# математических класса и оборудовать кабинеты для
# них новыми партами. За каждой партой может сидеть
# два учащихся. Известно количество учащихся в
# каждом из трех классов. Выведите наименьшее
# число парт, которое нужно приобрести для них.

# a = int(input("input class count 1: "))
# b = int(input("input class count 2: "))
# c = int(input("input class count 3: "))

# if a%2==0:
#     classA = a/2
# else:
#     classA = a//2+1

# if b%2==0:
#     classB = a/2
# else:
#     classB = a//2+1
# if c%2==0:
#     classC = a/2
# else:
#     classC = a//2+1
# print(classA+classB+classC)

# Вагоны в электричке пронумерованы натуральными
# числами, начиная с 1 (при этом иногда вагоны
# нумеруются от «головы» поезда, а иногда – с
# «хвоста»; это зависит от того, в какую сторону едет
# электричка). В каждом вагоне написан его номер.
# Витя сел в i-й вагон от головы поезда и обнаружил,
# что его вагон имеет номер j. Он хочет определить,
# сколько всего вагонов в электричке. Напишите
# программу, которая будет это делать или сообщать,
# что без дополнительной информации это сделать
# невозможно.

# i = 3
# j = 6
# if i != j:
#     print(j+i-1)
# else:
#     print("no can do")

# Дано натуральное число. Требуется определить,
# является ли год с данным номером високосным. Если
# год является високосным, то выведите YES, иначе
# выведите NO. Напомним, что в соответствии с
# григорианским календарем, год является
# високосным, если его номер кратен 4, но не кратен
# 100, а также если он кратен 400.
# Input: 2016
# Output: YES

# year = int(input("input a number: "))
# if year%4 ==0 and year%100!=0 or year%400 ==0:
#     print("YES")
# else:
#     print("NO")

# 11.Пользователь вводит целое число. Выведите его строку-описание вида "отрицательное четное число", 
# "нулевое число", "положительное нечетное число", 
# например, численным описанием числа 190 является строка "положительное четное число".

# number = input("imput number:")

# if number > 0:
#     stand = "positive"
# elif number < 0:
#     stand = "negative"
# else:
#     stand = 0
#while stand !+ 0:
    # if number % 2== 0:
    #     evenness = "even"
    # else:
    #     evenness = "odd"
    # print(stand + " " + evenness)
# if stand == 0:
#     print("zero")

# 15.Шахматный конь ходит буквой "Г" - на две клетки по вертикали в любом направлении и на одну клетку по горизонтали,
# или наоборот. Даны две различные клетки шахматной доски, определите, может ли конь попасть с первой клетки на вторую одним ходом. 
# В случае, если хотя бы одно из введенных чисел не лежит в диапазоне от 1 до 8, выведите строку "Ошибка!".

# x1 = int(input("input x1"))
# y1 = int(input("input y"))
# x2 = int(input("input x1"))
# y2 = int(input("input y"))

# while 0 < x1 <9 and 0< x2 < 9 and 0 < y1 < 9 and 0 < y2 <9:
#     if abs(x1-x2) == 1 and abs(y1-y2) == 2: #abs - модуль, запоминаем, бро
#         print("it can be done")
#     elif abs(x1-x2) == 2 and abs(y1-y2) == 1:
#         print("it can be done")
#     else:
#         print("it cannot be done")
# else:
#     print("MISTAKE")


# 16.Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей. 
# Дано a, b, c - стороны предполагаемого треугольника. Требуется сравнить длину каждого отрезка-стороны с суммой двух других. 
# Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.

# a = int(input("input a: "))
# b = int(input("input b: "))
# c = int(input("input c: "))

# if a+b > c and a+c > b and c+b >a:
#     print("we hava a traingle")
# else:
#     print("no, there is no such traingle, you scum")

# вводим секунды с начала дня, выводим часы, минуты и секунды

# secs = int(input("input seconds: "))
# hours = secs//3600
# mins = (secs-hours*3600)//60
# secs2 = (secs - hours*3600 - mins*60)
# print(f"{hours}:{mins}:{secs2}")
