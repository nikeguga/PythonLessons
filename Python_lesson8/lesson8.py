# работа с файлами
# open ("path") - открытие
# "r" - чтение
# "W" - создание или запись в файл с удалением предыдущих записей
# "a" - создание или запись в файл с сохранением предыдущих записей

# file = open("input.txt", "a", encoding= "utf-8") # создается новый файл, в режиме add с инкодингом для чтения русского текста
# file.write("привет, пидорок\n") # запись в файл и пепренос на новую строку
# a = ["rt", "34", "это я!"] # есть список
# file.writelines(a) # есть команда, которая выводит в файл список
# file.close() # обязательно закрываем файл

# конструкция with open

# with open ("input.txt", "r", encoding="utf-8") as file: # задается переменная файл прямо здесь. конструкция работает в табуляции, как толшько появляется запись после нее - файл закрывается автоматом
#     # lst = file.readlines() # возвращает список строк, идет по курсору
#     # print(lst)
#     # print(file.readlines()) # в данном случае курсор закончил проходку по файлу ранее, поэтому вернет пустой список
#     # file.seek(0) # этим мы перемещяем курсор на заданную позицию
#     # print(file.readlines())
#     # lst = [string.strip() for string in lst] # в списке убираем символ переноса
#     # print(*lst) # ну еще убрали скобочку
#     strFile = file.read() # возвращает весь файл одной строкой со всеми символами
#     print(strFile)
#     file.seek(0)
#     # print(file.readline()) # читает строку, если указать значение в скобках - прочитает именно столько байтов из первой строки.
#     # print(file.readline()) # второй ридлайн читает уже вторую строку и так далее
#     for i in range(2):
#         print(file.readline().strip()) # выводит построчно внутри цикла, стрип можно запихнуть и сюда

name = "kek ----> 123"
lst = name.split()
print(lst)
name = "poop"
print(name)